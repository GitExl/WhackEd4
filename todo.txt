1.3.x
- https://www.doomworld.com/forum/post/2857588
- https://www.doomworld.com/forum/post/2858537
- https://www.doomworld.com/forum/topic/148768-whacked4-removing-things/

1.4.0
- Remember a list of last used IWADs to load patch files with. Prune old entries from the list, sort by last used.
- Allow direct drag & drop onto application.
- https://www.doomworld.com/forum/post/2508656 Par Time for vanilla? Technically not compatible with plain Dehacked.
- https://www.doomworld.com/forum/topic/124355-ultimate-doom-builder-with-dehacked-support-feedback-wanted/
- https://doomwiki.org/wiki/DSDHacked
- Add MBF21 support. https://github.com/kraflab/mbf21/blob/master/docs/spec.md
    - Weapon, ammo and state UI need support for flags.
    - New MBF21 base table.
    - New table that inherits from the extended base table and mbf21 base table, and one table that only inherits from an mbf21 base table since they are not inclusive.
    - Bits fields already exist in code, but they still need data added to the tables and their flags defined.
- https://www.doomworld.com/forum/topic/124355-ultimate-doom-builder-with-dehacked-support-feedback-wanted/

Low priority bugs
- When listview column widths are resized, a scrollbar is sometimes displayed for no reason.
- Toolbar buttons clickable area does not extend to the side of the toolbar. An old wxWidgets bug\regression.

Later
- Patch analyzer could check for MBF\DEHEXTRA\MBF21\engine specific stuff.
- More Python type hinting.
- Split out patch reading\writing from patch class and clean it up.
- Muzzle flash support for weapon state previews. Needs refactoring of sprite preview code so that it can display multiple state animations overlayed on top of one another.
- VGA: "Also, it would be cool if the states had one extra column with the name of the thing that is using them."
  - Check to see if any things use states that use the wrong type of action (weapon or monster).
- Mark and display items (things, states, strings, ammo, weapons, sounds) as modified compared to engine config.
- Final Doom (TNT and Plutonia) support
    - needs Final Doom strings extraction, otherwise identical tables? What about Dehacked engine numbers?
    - See https://www.doomworld.com/forum/topic/117871-dehacked-30a-special-edition-with-support-for-both-final-doom-versions/?tab=comments#comment-2212475
    - https://github.com/GitExl/WhackEd4/issues/23
- Option to manually clear list of recent files.
- Investigate pyInstaller for executable generation. Single file, less dependencies?
- UI manual \ Dehacked tutorial.
- Look into new Eternity Engine and PrBoom+ Dehacked features.
- "Would've been better if WhackEd allowed to name the states like in the source code. Then you could reference them
   by names rather than by numbers, and moving large chunks of the table would be trivial. You'd only be limited by
   its size. Then again, if you want to make a complex TC in Boom, convenience is something you shouldn't be taking
   for granted.", Da Werecat
- Extend patch merging by https://www.doomworld.com/vb/post/1556253
- Action sound playback data for the Hexen + Heretic + ZDoom action functions.
- '...' button for actions to browse through list of actions plus a description.
  - Fix action descriptions first, not all correspond with what the actual Doom code does. Check with Doom code in p_pspr and p_enemy.
- DEHSUPP support. See GitHub issue #1.
- ZDaemon: Add and parse relevant actors from http://www.zdaemon.org/?CMD=info&NAME=deh. Is this related to DEHSUPP?
- Read\write DEHACKED lumps directly from a WAD file.
- Improve tab traversal everywhere.
- Redesign base interface so that it works in non-MDI window systems (GTK, MacOS).
- Finish Linux support.
